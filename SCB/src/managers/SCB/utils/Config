/*    */ package Pauldg7.plugins.SCB.managers;
/*    */ 
/*    */ import Pauldg7.plugins.SCB.main.SCB;
/*    */ import java.io.File;
/*    */ import java.io.IOException;
/*    */ import java.util.logging.Level;
/*    */ import java.util.logging.Logger;
/*    */ import org.bukkit.ChatColor;
/*    */ import org.bukkit.configuration.file.FileConfiguration;
/*    */ import org.bukkit.configuration.file.YamlConfiguration;
/*    */ import org.bukkit.plugin.Plugin;
/*    */ 
/*    */ public class Config
/*    */ {
/* 15 */   String scb = "§7[§cSCB§7] ";
/* 16 */   Plugin plugin = SCB.getInstance();
/* 17 */   String plyFile = this.plugin.getDataFolder() + File.separator + "players" + File.separator;
/* 18 */   String araFile = this.plugin.getDataFolder() + File.separator + "arenas" + File.separator;
/* 19 */   public static Config cmngr = new Config();
/*    */ 
/* 21 */   public static Config get() { return cmngr; }
/*    */ 
/*    */   public void defaultArenaConfig(String name) {
/* 24 */     File f = new File(this.araFile + name + ".yml");
/* 25 */     FileConfiguration fc = YamlConfiguration.loadConfiguration(f);
/* 26 */     if (!f.exists()) {
/* 27 */       fc.set("ArenaName", name);
/* 28 */       fc.set("Enabled", "false");
/*    */       try {
/* 30 */         fc.save(f);
/*    */       } catch (IOException e) {
/* 32 */         e.printStackTrace();
/* 33 */         this.plugin.getLogger().info("Could not create default arena config " + name);
/*    */       }
/*    */     }
/*    */     else {
/* 37 */       this.plugin.getLogger().info(this.scb + "Error Could Not Create Arena " + name);
/*    */     }
/*    */   }
/*    */ 
/* 41 */   public void deleteFile(String name) { File f = new File(this.araFile + name + ".yml");
/* 42 */     if (f.exists())
/* 43 */       f.delete(); }
/*    */ 
/*    */   public FileConfiguration getArenaConfig(String arena)
/*    */   {
/* 47 */     File arenaConfig = new File(this.araFile + arena + ".yml");
/* 48 */     FileConfiguration arenaFileConfig = YamlConfiguration.loadConfiguration(arenaConfig);
/* 49 */     return arenaFileConfig;
/*    */   }
/*    */   public File getArenaFile(String arena) {
/* 52 */     File arenaFile = new File(this.araFile + arena + ".yml");
/* 53 */     return arenaFile;
/*    */   }
/*    */ 
/*    */   public void reloadArenaConfig(String arena)
/*    */   {
/*    */   }
/*    */ 
/*    */   public void saveCustomConfig(File f, FileConfiguration fc)
/*    */   {
/*    */     try
/*    */     {
/* 66 */       fc.save(f);
/*    */     } catch (IOException ex) {
/* 68 */       this.plugin.getLogger().log(Level.SEVERE, "Could not save config to " + f, ex);
/*    */     }
/*    */   }
/*    */ 
/* 72 */   public void saveAllConfigs() { File arenas = new File(this.plugin.getDataFolder() + File.separator + "arenas" + File.separator);
/* 73 */     File players = new File(this.plugin.getDataFolder() + File.separator + "players" + File.separator);
/* 74 */     if (arenas.exists()) {
/* 75 */       for (File file : arenas.listFiles()) {
/* 76 */         FileConfiguration fc = YamlConfiguration.loadConfiguration(file);
/*    */         try {
/* 78 */           fc.save(file);
/*    */         } catch (IOException e) {
/* 80 */           e.printStackTrace();
/*    */         }
/*    */       }
/*    */     }
/* 84 */     if (players.exists())
/* 85 */       for (File file2 : players.listFiles()) {
/* 86 */         FileConfiguration fc2 = YamlConfiguration.loadConfiguration(file2);
/*    */         try {
/* 88 */           fc2.save(file2);
/*    */         }
/*    */         catch (IOException e) {
/* 91 */           e.printStackTrace();
/*    */         }
/*    */       }
/*    */   }
/*    */ }

/* Location:           /Users/colemanfortson/Downloads/SCB_R2.0 (1).jar
 * Qualified Name:     Pauldg7.plugins.SCB.managers.Config
 * JD-Core Version:    0.6.2
 */
